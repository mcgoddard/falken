service: falken-api

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 'arn:aws:dynamodb:eu-west-2:130979854346:table/falkenScoresTable'
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:DeleteMessage
      Resource: 'arn:aws:sqs:eu-west-2:130979854346:ScoresQueue'

functions:
  app-api:
    handler: api.handle
    memorySize: 128
    reservedConcurrency: 10
    events:
      - httpApi:
          path: /{any+}
          method: '*'
      - httpApi:
          path: /
          method: '*'
    environment:
      QUEUE_URL: https://sqs.eu-west-2.amazonaws.com/130979854346/ScoresQueue
  score-updates:
    handler: updates.handle
    memorySize: 128
    reservedConcurrency: 10
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - ScoresQueue
              - Arn
          batchSize: 1
  traffic:
    handler: traffic.handle
    timeout: 70
    memorySize: 256
    reservedConcurrency: 3
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: false
    environment:
      BASE_URLS: http://piemdb.infinipie.works/,http://piespace.infinipie.works/,https://recipies.infinipie.works/
      TEAM_NAMES: PieMDB,PieSpace,Recipies
      QUEUE_URL: https://sqs.eu-west-2.amazonaws.com/130979854346/ScoresQueue

resources:
  Resources:
    falkenTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: falkenScoresTable
        AttributeDefinitions:
          - AttributeName: team_name
            AttributeType: S
        KeySchema:
          - AttributeName: team_name
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    siteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: falken-app
        AccessControl: PublicRead
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders: ['*']
              AllowedMethods: [GET]
              AllowedOrigins: ['*']
        WebsiteConfiguration:
          IndexDocument: index.html
    ScoresQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "ScoresQueue"
        VisibilityTimeout: 60

plugins:
  - serverless-s3-sync

custom:
  s3Sync:
    - bucketName: falken-app
      localDir: ../app/dist
      acl: public-read
      deleteRemoved: true
